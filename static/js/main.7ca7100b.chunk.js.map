{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handelChange","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAQ,SAACC,GAAD,OACpB,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,4BAAIN,EAAMI,QAAQG,YCHPC,EAAW,SAACR,GACxB,OACC,qBAAKC,UAAU,YAAf,SAEED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,UCJxCM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACxB,uBACCZ,UAAU,SACVa,KAAO,SACPF,YAAgBA,EAChBG,SAAaF,MCkCAG,G,wDArCd,aAAe,IAAD,8BACb,gBAeDC,aAAe,SAACC,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACZd,SAAU,GACVW,YAAa,IALD,E,qDAUd,WAAqB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAO1C,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bd,EADA,EACAA,SAAUW,EADV,EACUA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC/CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAEjD,OACC,sBAAK/B,UAAU,MAAf,UACC,kDACD,cAAC,EAAD,CACCW,YAAc,iBACdC,aAAiBgB,KAAKZ,eAEvB,cAAC,EAAD,CAAUR,SAAUqB,W,GAjCLI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ca7100b.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card =  (props) => (\n\t<div className='card-container'>\n\t\t<img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}/>\n\t\t<h1 > {props.monster.name} </h1>\n\t\t<p>{props.monster.email}</p>\n\t</div>\n);\n","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component';\n\nexport const CardList = (props) => {\n\treturn (\n\t\t<div className='card-list'>\n\t\t\t{\n\t\t\t\tprops.monsters.map(monster => <Card key={monster.id} monster = {monster}/>)\n\t\t\t}\n\t\t</div>);\n};\n","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handelChange }) => (\n\t<input\n\t\tclassName='search'\n\t\ttype = 'search'\n\t\tplaceholder = { placeholder }\n\t\tonChange = { handelChange } />\n);\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ''\n\t\t};\n\t\t//this.handleChange = this.handleChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({ monsters: users }));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchField: e.target.value })\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter(monster =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t<SearchBox\n\t\t\t\tplaceholder = 'search monster'\n\t\t\t\thandelChange = { this.handleChange }\n\t\t\t/>\n\t\t\t<CardList monsters={filteredMonsters}/>\n\t\t</div>)\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}